option('openblas_include',
       type: 'array',
       value: ['/usr/include/openblas/'],
       description: 'Paths to openblas include directories')

option('opencl_include',
       type: 'string',
       value: '/usr/include/',
       description: 'Path to OpenCL include directory')

option('openblas_libdirs',
       type: 'array',
       value: ['/usr/lib/'],
       description: 'Paths to OpenBLAS libraries')

option('opencl_libdirs',
       type: 'array',
       value: ['/opt/cuda/lib64/', '/usr/local/cuda/lib64/'],
       description: 'Paths to OpenCL libraries')

option('cudnn_libdirs',
       type: 'array',
       value: ['/usr/local/cuda/lib64'],
       description: 'Paths to Cuda/cudnn libraries')

option('mkl_libdirs',
       type: 'array',
       value: ['/opt/intel/lib/intel64', '/opt/intel/mkl/lib/intel64', '/opt/intel/mkl/lib'],
       description: 'Paths to MKL libraries')

option('mkl_include',
       type: 'array',
       value: ['/opt/intel/mkl/include'],
       description: 'Paths to MKL libraries')

option('dnnl_dir',
       type: 'string',
       value: '/usr',
       description: 'Paths to DNNL install directory')

option('cudnn_include',
       type: 'array',
       value: ['/opt/cuda/include/', '/usr/local/cuda/include/', '/usr/lib/cuda/include/'],
       description: 'Paths to cudnn include directory')

option('build_backends',
       type: 'boolean',
       value: true,
       description: 'Build backends for NN computation')

option('blas',
       type: 'boolean',
       value: false,
       description: 'Enable BLAS backend')

option('ispc',
       type: 'boolean',
       value: false,
       description: 'use ispc')

option('ispc_native_only',
       type: 'boolean',
       value: false,
       description: 'use ispc and enable native arch only')

option('cudnn',
       type: 'boolean',
       value: false,
       description: 'Enable cuDNN backend')

option('plain_cuda',
       type: 'boolean',
       value: false,
       description: 'Enable CUDA backend')

option('opencl',
       type: 'boolean',
       value: false,
       description: 'Enable OpenCL backend')

option('dx',
       type: 'boolean',
       value: false,
       description: 'Enable DirectX12 backend')

option('tensorflow',
       type: 'boolean',
       value: false,
       description: 'Enable TensorFlow backend')

option('onednn',
       type: 'boolean',
       value: false,
       description: 'Enable oneDNN backend')

option('USE_CUDA',
       type: 'boolean',
       value: false,
       description: 'Enable CUDA')

option('USE_AMD',
       type: 'boolean',
       value: false,
       description: 'Enable AMD')

option('USE_SYCL',
       type: 'boolean',
       value: true,
       description: 'Enable SYCL L0 backend')

option('USE_NVIDIA_BACKEND',
       type: 'boolean',
       value: false,
       description: 'Enable SYCL NVIDIA backend')

option('USE_AMD_BACKEND',
       type: 'boolean',
       value: false,
       description: 'Enable SYCL AMD backend')

option('USE_L0_BACKEND',
       type: 'boolean',
       value: false,
       description: 'Enable SYCL L0 backend')

option('USE_SM',
       type: 'string',
       value: '61',
       description: 'SM to use for SYCL NVIDIA backend')

option('GPU_AOT',
       type: 'array',
       value: [],
       description: 'AOT setting for Intel devices')

option('openblas',
       type: 'boolean',
       value: false,
       description: 'Enable OpenBLAS support')

option('mkl',
       type: 'boolean',
       value: true,
       description: 'Enable MKL BLAS support')

option('dnnl',
       type: 'boolean',
       value: false,
       description: 'Enable DNNL BLAS support')

option('accelerate',
       type: 'boolean',
       value: false,
       description: 'Enable Accelerate BLAS support')

option('metal',
       type: 'feature',
       value: 'auto',
       description: 'Enable Metal backend')

option('malloc',
       type : 'string',
       value: '',
       description: 'Use alternative memory allocator, e.g. tcmalloc/jemalloc')

option('mimalloc_libdir',
       type : 'string',
       value: '',
       description: 'Library directory for malloc=mimalloc')

option('popcnt',
       type: 'boolean',
       value: false,
       description: 'Use the popcnt instruction')

option('pext',
       type: 'boolean',
       value: false,
       description: 'Use the pext instruction')

option('neon',
       type: 'boolean',
       value: true,
       description: 'Use neon instructions on arm processors')

option('gtest',
       type: 'boolean',
       value: false,
       description: 'Build gtest tests')

option('embed',
       type: 'boolean',
       value: false,
       description: 'Use embedded net by default')

option('nvcc_ccbin',
       type: 'string',
       value: '',
       description: 'Override C++ compiler used by cuda nvcc')

option('python_bindings',
       type: 'boolean',
       value: false,
       description: 'Build Python bindings for the python to bind.')

option('cc_cuda',
       type: 'string',
       value: '',
       description: 'Build for a specific cuda CC, e.g. -Dcc_cuda=35 for CC 3.5')

option('onnx_libdir',
       type: 'string',
       value: '',
       description: 'Paths to ONNX runtime libraries')

option('onnx_include',
       type: 'string',
       value: '',
       description: 'Paths to ONNX runtime includes')

option('CMAKE_CXX_FLAGS',
       type: 'array',
       value: [],
       description: 'Override C++ compiler options used by nvcc, clang, and icx.')

option('OVERRIDE_GENERAL_CXX_FLAGS',
       type: 'array',
       value: [],
       description: 'Override C++ compiler general options used by nvcc, clang, and icx.')

option('CUDA_NVCC_FLAGS',
       type: 'array',
       value: [],
       description: 'Override general nvcc flags.')